<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
       	http://www.springframework.org/schema/beans http://www.springframework.org/scheam/beans/spring-beans.xsd
       	http://www.springframework.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
       	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
>

	<!-- JDBC 연결을 처리하는 기능을 가진 DataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" 
				value="jdbc:mysql://127.0.0.1:3306/book_ex?useSSL=false"></property>
		<property name="username" value="js"></property>
		<property name="password" value="js"></property>
	</bean>
	
	<!-- mybatis SqlSeesionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
				  value="classpath:spring/mybatis-config.xml"></property>
		<!-- 런타임 시 SqlSeesionFactory에 MyBatis mapper 파일들의 경로가 설정됨 -->
		<property name="mapperLocations"
				  value="classpath:mappers/**/*Mapper.xml"></property>	
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
			destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></constructor-arg>
	</bean>

    <!-- 트랜잭션 매니저 설정 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"> </property>
    </bean>

    <!-- @Transactional 애노테이션을 이용한 트랜잭션 관리가 가능하게 하는 설정 -->
    <tx:annotation-driven/>

    <beans>
        <!-- dataSource() 메소드 <bean> 태그 전환 -->
        <!-- 위의 DataSource id가 이미 있어 충돌나므로 Ex로 정의-->
        <bean id="dataSourceEx" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
            <property name="driverClass" value="com.mysql.jdbc.Driver"/>
            <property name="url" value="jdbc:mysql://127.0.0.1:3306/book_ex?useSSL=false" />
            <property name="username" value="js"/>
            <property name="password" value="js" />
        </bean>

        <!-- userDao() 빈 설정 -->
        <bean id="userDao2" class="demos.comm.dao.springBookExDAO_1.UserDao2">
            <property name="dataSource" ref="dataSourceEx"/>
        </bean>
    </beans>


</beans>